import { $host, $authHost } from "../http";
import { JWT_TOKEN, USER_DATA } from "../utils/consts";

export const authAPI = {
  async login(email, password) {
    const { data } = await $host.post("auth/login", { email, password });
    console.log("üì® –î–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ:", data);

    // –£–±–µ–¥–∏–º—Å—è —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é
    if (data.token && data.user) {
      localStorage.setItem(JWT_TOKEN, data.token);
      localStorage.setItem(USER_DATA, JSON.stringify(data.user));
      console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ localStorage:", data.user);
    } else {
      console.error("‚ùå –ù–µ—Ç token –∏–ª–∏ user –≤ –æ—Ç–≤–µ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞");
    }
    return data;
  },

  async register(email, password, firstName, lastName) {
    const { data } = await $host.post("auth/register", {
      email,
      password,
      firstName,
      lastName,
    });
    console.log("üì® –î–∞–Ω–Ω—ã–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", data);

    if (data.token && data.user) {
      localStorage.setItem(JWT_TOKEN, data.token);
      localStorage.setItem(USER_DATA, JSON.stringify(data.user));
      console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ localStorage:", data.user);
    } else {
      console.error("‚ùå –ù–µ—Ç token –∏–ª–∏ user –≤ –æ—Ç–≤–µ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞");
    }
    return data;
  },

  async checkAuth() {
    try {
      const { data } = await $authHost.get("auth/me");
      console.log("üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", data);
      if (data.user) {
        localStorage.setItem(USER_DATA, JSON.stringify(data.user));
      }
      return data;
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
      throw error;
    }
  },
};
