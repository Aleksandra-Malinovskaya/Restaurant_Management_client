import React, { useState, useEffect, useCallback } from "react";
import Navbar from "../../NavBar";
import { $authHost } from "../../../http";
import { useNavigate } from "react-router-dom";

const StatsAdmin = () => {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const [activeTab, setActiveTab] = useState("daily");

  // –î–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const [dailyStats, setDailyStats] = useState(null);
  const [weeklyStats, setWeeklyStats] = useState(null);
  const [monthlyStats, setMonthlyStats] = useState(null);
  const [popularDishes, setPopularDishes] = useState(null);
  const [employeeStats, setEmployeeStats] = useState(null);

  // –§–∏–ª—å—Ç—Ä—ã
  const [filters, setFilters] = useState({
    date: new Date().toISOString().split("T")[0],
    startDate: new Date(new Date().setDate(new Date().getDate() - 7))
      .toISOString()
      .split("T")[0],
    year: new Date().getFullYear(),
    month: new Date().getMonth() + 1,
    period: "month",
    dishesLimit: 10,
  });

  const handleBack = () => {
    navigate("/admin-panel");
  };

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
  const loadEmployeeStats = useCallback(async () => {
    try {
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞–º —á–µ—Ä–µ–∑ UserController
      const waiterStats = await $authHost.get("/users/stats/waiters");
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–≤–∞—Ä–∞–º —á–µ—Ä–µ–∑ UserController
      const chefStats = await $authHost.get("/users/stats/chefs");

      setEmployeeStats({
        waiters: waiterStats.data,
        chefs: chefStats.data,
      });
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:", err);
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –æ—à–∏–±–∫–∏
      setEmployeeStats({
        waiters: [],
        chefs: [],
      });
    }
  }, []);

  const loadStats = useCallback(async () => {
    try {
      setLoading(true);
      setError("");

      const requests = [];

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
      switch (activeTab) {
        case "daily":
          requests.push(
            $authHost
              .get(`/stats/daily?date=${filters.date}`)
              .then((res) => {
                console.log("üìä Daily stats response:", res.data);
                setDailyStats(res.data);
              })
              .catch((err) => {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", err);
                setDailyStats(null);
              })
          );
          break;
        case "weekly":
          requests.push(
            $authHost
              .get(`/stats/weekly?startDate=${filters.startDate}`)
              .then((res) => setWeeklyStats(res.data))
              .catch((err) => {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", err);
                setWeeklyStats(null);
              })
          );
          break;
        case "monthly":
          requests.push(
            $authHost
              .get(`/stats/monthly?year=${filters.year}&month=${filters.month}`)
              .then((res) => {
                console.log("Monthly stats response:", res.data);
                setMonthlyStats(res.data);
              })
              .catch((err) => {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Å—è—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", err);
                setMonthlyStats(null);
              })
          );
          break;
        case "dishes":
          requests.push(
            $authHost
              .get(
                `/stats/popular-dishes?period=${filters.period}&limit=${filters.dishesLimit}`
              )
              .then((res) => setPopularDishes(res.data))
              .catch((err) => {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–ª—é–¥:", err);
                setPopularDishes(null);
              })
          );
          break;
        case "employees":
          requests.push(loadEmployeeStats());
          break;
        default:
          console.warn(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞: ${activeTab}`);
          break;
      }

      await Promise.all(requests);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", err);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É");
    } finally {
      setLoading(false);
    }
  }, [
    activeTab,
    filters.date,
    filters.startDate,
    filters.year,
    filters.month,
    filters.period,
    filters.dishesLimit,
    loadEmployeeStats,
  ]);

  useEffect(() => {
    loadStats();
  }, [loadStats]);

  // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª
  const formatNumber = (num) => {
    if (num === null || num === undefined || isNaN(num)) return "0";
    return new Intl.NumberFormat("ru-RU", {
      minimumFractionDigits: 0,
      maximumFractionDigits: 2,
    }).format(num);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–∏—Å–µ–ª
  const safeNumber = (num, defaultValue = 0) => {
    if (num === null || num === undefined || isNaN(num)) return defaultValue;
    return num;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞
  const calculateAverageCheck = (revenue, ordersCount) => {
    if (!revenue || !ordersCount || ordersCount === 0) return 0;
    return revenue / ordersCount;
  };

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤
  const getOrderStatuses = (stats) => {
    if (!stats || !stats.orderStatuses) {
      return [];
    }

    // –ï—Å–ª–∏ orderStatuses - —ç—Ç–æ –º–∞—Å—Å–∏–≤
    if (Array.isArray(stats.orderStatuses)) {
      return stats.orderStatuses;
    }

    // –ï—Å–ª–∏ orderStatuses - —ç—Ç–æ –æ–±—ä–µ–∫—Ç
    if (typeof stats.orderStatuses === "object") {
      return Object.entries(stats.orderStatuses).map(([status, count]) => ({
        status,
        count,
      }));
    }

    return [];
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
  const translateStatus = (status) => {
    const statusMap = {
      open: "–û—Ç–∫—Ä—ã—Ç",
      in_progress: "–í —Ä–∞–±–æ—Ç–µ",
      ready: "–ì–æ—Ç–æ–≤",
      closed: "–ó–∞–∫—Ä—ã—Ç",
      completed: "–ó–∞–≤–µ—Ä—à–µ–Ω",
      pending: "–í –æ–∂–∏–¥–∞–Ω–∏–∏",
      paid: "–û–ø–ª–∞—á–µ–Ω",
      cancelled: "–û—Ç–º–µ–Ω–µ–Ω",
      served: "–û–±—Å–ª—É–∂–µ–Ω",
      payment: "–û–ø–ª–∞—Ç–∞",
    };

    return statusMap[status] || status;
  };

  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô
  const renderDailyStats = () => {
    if (!dailyStats)
      return (
        <div className="text-center py-5 text-muted">
          <i className="bi bi-calendar-x display-4"></i>
          <p className="mt-3">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É</p>
        </div>
      );

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
    const orderStatuses = getOrderStatuses(dailyStats);
    console.log("üìä Order statuses data:", orderStatuses);

    return (
      <div className="row">
        <div className="col-12 mb-3">
          <div className="card">
            <div className="card-header">
              <h5 className="card-title mb-0">
                <i className="bi bi-calendar-day me-2"></i>
                –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞{" "}
                {new Date(dailyStats.date || filters.date).toLocaleDateString(
                  "ru-RU"
                )}
              </h5>
            </div>
            <div className="card-body">
              <div className="row">
                {/* –ó–∞–∫–∞–∑—ã */}
                <div className="col-md-6">
                  <div className="card bg-light">
                    <div className="card-body">
                      <h6 className="card-title text-primary">
                        <i className="bi bi-cart me-2"></i>
                        –ó–∞–∫–∞–∑—ã
                      </h6>
                      <div className="row text-center">
                        <div className="col-6">
                          <div className="border-end">
                            <h3 className="text-primary">
                              {formatNumber(
                                dailyStats.orders?.total ||
                                  dailyStats.totalOrders ||
                                  0
                              )}
                            </h3>
                            <small className="text-muted">–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</small>
                          </div>
                        </div>
                        <div className="col-6">
                          <div>
                            <h3 className="text-success">
                              {formatNumber(
                                dailyStats.orders?.revenue ||
                                  dailyStats.totalRevenue ||
                                  0
                              )}
                            </h3>
                            <small className="text-muted">–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</small>
                          </div>
                        </div>
                      </div>
                      <div className="row text-center mt-3">
                        <div className="col-6">
                          <div className="border-end">
                            <h4 className="text-info">
                              {formatNumber(
                                dailyStats.orders?.averageOrderValue ||
                                  calculateAverageCheck(
                                    dailyStats.orders?.revenue ||
                                      dailyStats.totalRevenue,
                                    dailyStats.orders?.total ||
                                      dailyStats.totalOrders
                                  )
                              )}
                            </h4>
                            <small className="text-muted">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</small>
                          </div>
                        </div>
                        <div className="col-6">
                          <div>
                            <h4 className="text-warning">
                              {formatNumber(
                                dailyStats.orders?.uniqueWaiters || 0
                              )}
                            </h4>
                            <small className="text-muted">
                              –†–∞–±–æ—Ç–∞–ª–æ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤
                            </small>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                {/* –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
                <div className="col-md-6">
                  <div className="card bg-light">
                    <div className="card-body">
                      <h6 className="card-title text-success">
                        <i className="bi bi-calendar-check me-2"></i>
                        –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                      </h6>
                      <div className="row text-center">
                        <div className="col-6">
                          <div className="border-end">
                            <h3 className="text-success">
                              {formatNumber(
                                dailyStats.reservations?.total ||
                                  dailyStats.totalReservations ||
                                  0
                              )}
                            </h3>
                            <small className="text-muted">
                              –í—Å–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
                            </small>
                          </div>
                        </div>
                        <div className="col-6">
                          <div>
                            <h3 className="text-info">
                              {formatNumber(
                                dailyStats.reservations?.totalGuests ||
                                  dailyStats.totalGuests ||
                                  0
                              )}
                            </h3>
                            <small className="text-muted">–í—Å–µ–≥–æ –≥–æ—Å—Ç–µ–π</small>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö: –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤ */}
              <div className="row mt-4">
                <div className="col-12">
                  <div className="card">
                    <div className="card-header">
                      <h6 className="card-title mb-0">–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤</h6>
                    </div>
                    <div className="card-body">
                      {orderStatuses.length > 0 ? (
                        <div className="row">
                          {orderStatuses.map((statusItem, index) => {
                            const status = statusItem.status || statusItem.name;
                            const count =
                              statusItem.count ||
                              statusItem.value ||
                              statusItem.quantity;

                            if (!status || count === undefined) return null;

                            return (
                              <div
                                key={status || index}
                                className="col-md-3 col-6 mb-2"
                              >
                                <div className="d-flex justify-content-between align-items-center p-2 border rounded">
                                  <span className="text-capitalize">
                                    {translateStatus(status)}
                                  </span>
                                  <span className="badge bg-primary">
                                    {formatNumber(count)}
                                  </span>
                                </div>
                              </div>
                            );
                          })}

                          {/* –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç –≤ –¥–∞–Ω–Ω—ã—Ö */}
                          {!orderStatuses.some((s) => s.status === "open") && (
                            <div className="col-md-3 col-6 mb-2">
                              <div className="d-flex justify-content-between align-items-center p-2 border rounded">
                                <span>–û—Ç–∫—Ä—ã—Ç</span>
                                <span className="badge bg-secondary">0</span>
                              </div>
                            </div>
                          )}

                          {!orderStatuses.some(
                            (s) => s.status === "in_progress"
                          ) && (
                            <div className="col-md-3 col-6 mb-2">
                              <div className="d-flex justify-content-between align-items-center p-2 border rounded">
                                <span>–í —Ä–∞–±–æ—Ç–µ</span>
                                <span className="badge bg-secondary">0</span>
                              </div>
                            </div>
                          )}

                          {!orderStatuses.some((s) => s.status === "ready") && (
                            <div className="col-md-3 col-6 mb-2">
                              <div className="d-flex justify-content-between align-items-center p-2 border rounded">
                                <span>–ì–æ—Ç–æ–≤</span>
                                <span className="badge bg-secondary">0</span>
                              </div>
                            </div>
                          )}

                          {!orderStatuses.some(
                            (s) => s.status === "closed"
                          ) && (
                            <div className="col-md-3 col-6 mb-2">
                              <div className="d-flex justify-content-between align-items-center p-2 border rounded">
                                <span>–ó–∞–∫—Ä—ã—Ç</span>
                                <span className="badge bg-secondary">0</span>
                              </div>
                            </div>
                          )}
                        </div>
                      ) : (
                        // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–∞—Ö, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–±–æ—Ä
                        <div className="row">
                          {["open", "in_progress", "ready", "closed"].map(
                            (status) => (
                              <div key={status} className="col-md-3 col-6 mb-2">
                                <div className="d-flex justify-content-between align-items-center p-2 border rounded">
                                  <span className="text-capitalize">
                                    {translateStatus(status)}
                                  </span>
                                  <span className="badge bg-secondary">0</span>
                                </div>
                              </div>
                            )
                          )}
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ (weeklyStats, monthlyStats, popularDishes, employeeStats)
  // –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...

  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const renderWeeklyStats = () => {
    if (!weeklyStats)
      return (
        <div className="text-center py-5 text-muted">
          <i className="bi bi-calendar-x display-4"></i>
          <p className="mt-3">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –Ω–µ–¥–µ–ª—é</p>
        </div>
      );

    return (
      <div className="row">
        <div className="col-12">
          <div className="card">
            <div className="card-header">
              <h5 className="card-title mb-0">
                <i className="bi bi-calendar-week me-2"></i>
                –ù–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ({weeklyStats.period?.start} -{" "}
                {weeklyStats.period?.end})
              </h5>
            </div>
            <div className="card-body">
              {/* –ò—Ç–æ–≥–∏ –Ω–µ–¥–µ–ª–∏ */}
              <div className="row mb-4">
                <div className="col-md-3">
                  <div className="card bg-primary text-white">
                    <div className="card-body text-center">
                      <h3>{formatNumber(weeklyStats.totals?.orders?.total)}</h3>
                      <small>–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</small>
                    </div>
                  </div>
                </div>
                <div className="col-md-3">
                  <div className="card bg-success text-white">
                    <div className="card-body text-center">
                      <h3>
                        {formatNumber(weeklyStats.totals?.orders?.revenue)}
                      </h3>
                      <small>–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞</small>
                    </div>
                  </div>
                </div>
                <div className="col-md-3">
                  <div className="card bg-info text-white">
                    <div className="card-body text-center">
                      <h3>
                        {formatNumber(weeklyStats.totals?.reservations?.total)}
                      </h3>
                      <small>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</small>
                    </div>
                  </div>
                </div>
                <div className="col-md-3">
                  <div className="card bg-warning text-white">
                    <div className="card-body text-center">
                      <h3>
                        {formatNumber(
                          weeklyStats.totals?.reservations?.totalGuests
                        )}
                      </h3>
                      <small>–í—Å–µ–≥–æ –≥–æ—Å—Ç–µ–π</small>
                    </div>
                  </div>
                </div>
              </div>

              {/* –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
              <div className="card">
                <div className="card-header">
                  <h6 className="card-title mb-0">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–Ω—è–º</h6>
                </div>
                <div className="card-body">
                  <div className="table-responsive">
                    <table className="table table-striped">
                      <thead>
                        <tr>
                          <th>–î–∞—Ç–∞</th>
                          <th>–ó–∞–∫–∞–∑—ã</th>
                          <th>–í—ã—Ä—É—á–∫–∞</th>
                          <th>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</th>
                        </tr>
                      </thead>
                      <tbody>
                        {(weeklyStats.dailyStats || []).map((day) => (
                          <tr key={day.date}>
                            <td>
                              {new Date(day.date).toLocaleDateString("ru-RU")}
                            </td>
                            <td>
                              <span className="badge bg-primary">
                                {formatNumber(day.ordersCount)}
                              </span>
                            </td>
                            <td className="text-success fw-bold">
                              {formatNumber(day.dailyRevenue)}
                            </td>
                            <td className="text-info">
                              {formatNumber(
                                calculateAverageCheck(
                                  day.dailyRevenue,
                                  day.ordersCount
                                )
                              )}
                            </td>
                          </tr>
                        ))}
                        {(weeklyStats.dailyStats || []).length === 0 && (
                          <tr>
                            <td
                              colSpan="4"
                              className="text-center text-muted py-3"
                            >
                              –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –Ω–µ–¥–µ–ª—é
                            </td>
                          </tr>
                        )}
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –º–µ—Å—è—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const renderMonthlyStats = () => {
    if (!monthlyStats)
      return (
        <div className="text-center py-5 text-muted">
          <i className="bi bi-calendar-x display-4"></i>
          <p className="mt-3">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü</p>
        </div>
      );

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞
    const ordersTotal = monthlyStats.totals?.orders?.total || 0;
    const ordersRevenue = monthlyStats.totals?.orders?.revenue || 0;
    const averageOrderValue =
      monthlyStats.totals?.orders?.averageOrderValue ||
      calculateAverageCheck(ordersRevenue, ordersTotal);

    return (
      <div className="row">
        <div className="col-12">
          <div className="card">
            <div className="card-header">
              <h5 className="card-title mb-0">
                <i className="bi bi-calendar-month me-2"></i>
                –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {monthlyStats.period?.monthName}{" "}
                {monthlyStats.period?.year}
              </h5>
            </div>
            <div className="card-body">
              {/* –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
              <div className="row mb-4">
                <div className="col-md-2">
                  <div className="card border-primary">
                    <div className="card-body text-center">
                      <h4 className="text-primary">
                        {formatNumber(ordersTotal)}
                      </h4>
                      <small className="text-muted">–ó–∞–∫–∞–∑–æ–≤</small>
                    </div>
                  </div>
                </div>
                <div className="col-md-2">
                  <div className="card border-success">
                    <div className="card-body text-center">
                      <h4 className="text-success">
                        {formatNumber(ordersRevenue)}
                      </h4>
                      <small className="text-muted">–í—ã—Ä—É—á–∫–∞</small>
                    </div>
                  </div>
                </div>
                <div className="col-md-2">
                  <div className="card border-info">
                    <div className="card-body text-center">
                      <h4 className="text-info">
                        {formatNumber(averageOrderValue)}
                      </h4>
                      <small className="text-muted">–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</small>
                    </div>
                  </div>
                </div>
                <div className="col-md-2">
                  <div className="card border-warning">
                    <div className="card-body text-center">
                      <h4 className="text-warning">
                        {formatNumber(
                          safeNumber(monthlyStats.totals?.orders?.maxOrderValue)
                        )}
                      </h4>
                      <small className="text-muted">–ú–∞–∫—Å. –∑–∞–∫–∞–∑</small>
                    </div>
                  </div>
                </div>
                <div className="col-md-2">
                  <div className="card border-secondary">
                    <div className="card-body text-center">
                      <h4 className="text-secondary">
                        {formatNumber(monthlyStats.totals?.reservations?.total)}
                      </h4>
                      <small className="text-muted">–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</small>
                    </div>
                  </div>
                </div>
                <div className="col-md-2">
                  <div className="card border-dark">
                    <div className="card-body text-center">
                      <h4 className="text-dark">
                        {formatNumber(
                          monthlyStats.totals?.reservations?.totalGuests
                        )}
                      </h4>
                      <small className="text-muted">–ì–æ—Å—Ç–µ–π</small>
                    </div>
                  </div>
                </div>
              </div>

              {/* –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
              <div className="card">
                <div className="card-header">
                  <h6 className="card-title mb-0">–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h6>
                </div>
                <div className="card-body">
                  <div className="table-responsive">
                    <table className="table table-sm table-hover">
                      <thead>
                        <tr>
                          <th>–î–∞—Ç–∞</th>
                          <th>–ó–∞–∫–∞–∑—ã</th>
                          <th>–í—ã—Ä—É—á–∫–∞</th>
                          <th>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</th>
                        </tr>
                      </thead>
                      <tbody>
                        {(monthlyStats.dailyStats || []).map((day) => {
                          const dayAverageCheck =
                            day.averageOrderValue ||
                            calculateAverageCheck(
                              day.dailyRevenue,
                              day.ordersCount
                            );

                          return (
                            <tr key={day.date}>
                              <td>
                                {new Date(day.date).toLocaleDateString("ru-RU")}
                              </td>
                              <td>
                                <span className="badge bg-primary">
                                  {formatNumber(day.ordersCount)}
                                </span>
                              </td>
                              <td className="text-success fw-bold">
                                {formatNumber(day.dailyRevenue)}
                              </td>
                              <td className="text-info">
                                {formatNumber(dayAverageCheck)}
                              </td>
                            </tr>
                          );
                        })}
                        {(monthlyStats.dailyStats || []).length === 0 && (
                          <tr>
                            <td
                              colSpan="4"
                              className="text-center text-muted py-3"
                            >
                              –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
                            </td>
                          </tr>
                        )}
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–ª—é–¥
  const renderPopularDishes = () => {
    if (!popularDishes)
      return (
        <div className="text-center py-5 text-muted">
          <i className="bi bi-egg display-4"></i>
          <p className="mt-3">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–ª—é–¥–∞—Ö</p>
        </div>
      );

    return (
      <div className="row">
        <div className="col-12">
          <div className="card">
            <div className="card-header">
              <h5 className="card-title mb-0">
                <i className="bi bi-graph-up me-2"></i>
                –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞ ({popularDishes.period})
              </h5>
            </div>
            <div className="card-body">
              <div className="table-responsive">
                <table className="table table-striped">
                  <thead>
                    <tr>
                      <th>#</th>
                      <th>–ë–ª—é–¥–æ</th>
                      <th>–¶–µ–Ω–∞</th>
                      <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                      <th>–í—ã—Ä—É—á–∫–∞</th>
                      <th>–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤</th>
                    </tr>
                  </thead>
                  <tbody>
                    {(popularDishes.popularDishes || []).map((dish, index) => (
                      <tr key={dish.dishId}>
                        <td>
                          <span className="badge bg-primary">{index + 1}</span>
                        </td>
                        <td className="fw-bold">{dish.dishName}</td>
                        <td>{formatNumber(dish.price)}</td>
                        <td>
                          <span className="badge bg-success">
                            {formatNumber(dish.totalQuantity)}
                          </span>
                        </td>
                        <td className="text-success fw-bold">
                          {formatNumber(dish.totalRevenue)}
                        </td>
                        <td>
                          <span className="badge bg-info">
                            {formatNumber(dish.uniqueOrders)}
                          </span>
                        </td>
                      </tr>
                    ))}
                    {(popularDishes.popularDishes || []).length === 0 && (
                      <tr>
                        <td colSpan="6" className="text-center text-muted py-3">
                          –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–ª—é–¥–∞—Ö
                        </td>
                      </tr>
                    )}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // –†–µ–Ω–¥–µ—Ä –≤–∫–ª–∞–¥–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
  const renderEmployeeStats = () => {
    if (!employeeStats)
      return (
        <div className="text-center py-5 text-muted">
          <div className="spinner-border text-primary" role="status">
            <span className="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
          </div>
          <p className="mt-3">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...</p>
        </div>
      );

    return (
      <div className="row">
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞–º */}
        <div className="col-md-6">
          <div className="card">
            <div className="card-header">
              <h5 className="card-title mb-0">
                <i className="bi bi-people me-2"></i>
                –û—Ñ–∏—Ü–∏–∞–Ω—Ç—ã
              </h5>
            </div>
            <div className="card-body">
              {(employeeStats.waiters || []).length > 0 ? (
                <div className="table-responsive">
                  <table className="table table-sm">
                    <thead>
                      <tr>
                        <th>–û—Ñ–∏—Ü–∏–∞–Ω—Ç</th>
                        <th>–ó–∞–∫–∞–∑—ã</th>
                        <th>–í—ã—Ä—É—á–∫–∞</th>
                        <th>–°—Ä–µ–¥–Ω–∏–π —á–µ–∫</th>
                      </tr>
                    </thead>
                    <tbody>
                      {(employeeStats.waiters || []).map((waiter) => {
                        const waiterAverageCheck =
                          waiter.averageOrderValue ||
                          calculateAverageCheck(
                            waiter.totalRevenue,
                            waiter.totalOrders
                          );

                        return (
                          <tr key={waiter.waiterId}>
                            <td>{waiter.waiterName}</td>
                            <td>
                              <span className="badge bg-primary">
                                {formatNumber(waiter.totalOrders)}
                              </span>
                            </td>
                            <td className="text-success fw-bold">
                              {formatNumber(waiter.totalRevenue)}
                            </td>
                            <td className="text-info">
                              {formatNumber(waiterAverageCheck)}
                            </td>
                          </tr>
                        );
                      })}
                    </tbody>
                  </table>
                </div>
              ) : (
                <div className="text-center text-muted py-3">
                  <i className="bi bi-info-circle display-4"></i>
                  <p className="mt-2">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞–º</p>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–≤–∞—Ä–∞–º */}
        <div className="col-md-6">
          <div className="card">
            <div className="card-header">
              <h5 className="card-title mb-0">
                <i className="bi bi-egg-fried me-2"></i>
                –ü–æ–≤–∞—Ä–∞
              </h5>
            </div>
            <div className="card-body">
              {(employeeStats.chefs || []).length > 0 ? (
                <div className="table-responsive">
                  <table className="table table-sm">
                    <thead>
                      <tr>
                        <th>–ü–æ–≤–∞—Ä</th>
                        <th>–ë–ª—é–¥ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–æ</th>
                        <th>–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è</th>
                        <th>–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤</th>
                      </tr>
                    </thead>
                    <tbody>
                      {(employeeStats.chefs || []).map((chef) => (
                        <tr key={chef.chefId}>
                          <td>{chef.chefName}</td>
                          <td>
                            <span className="badge bg-success">
                              {formatNumber(chef.totalDishesPrepared)}
                            </span>
                          </td>
                          <td className="text-info">
                            {formatNumber(chef.averagePreparationTime)} –º–∏–Ω
                          </td>
                          <td>
                            <span className="badge bg-warning">
                              {formatNumber(chef.activeOrders)}
                            </span>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              ) : (
                <div className="text-center text-muted py-3">
                  <i className="bi bi-info-circle display-4"></i>
                  <p className="mt-2">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–≤–∞—Ä–∞–º</p>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="min-vh-100 bg-light">
      <Navbar />

      <div className="container-fluid py-4">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="row mb-4">
          <div className="col-12">
            <div className="card bg-white shadow-sm">
              <div className="card-body">
                <div className="row align-items-center">
                  <div className="col-md-6">
                    <div className="d-flex align-items-center">
                      <button
                        className="btn btn-outline-secondary me-3"
                        onClick={handleBack}
                        title="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞"
                      >
                        <i className="bi bi-arrow-left"></i>
                      </button>
                      <div>
                        <h1 className="h3 mb-2">
                          <i className="bi bi-graph-up-arrow me-2"></i>
                          –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
                        </h1>
                        <p className="text-muted mb-0">
                          –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã
                        </p>
                      </div>
                    </div>
                  </div>
                  <div className="col-md-6 text-end">
                    <div className="text-muted">
                      <i className="bi bi-calendar me-1"></i>
                      {new Date().toLocaleDateString("ru-RU", {
                        weekday: "long",
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                      })}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {error && (
          <div className="row mb-3">
            <div className="col-12">
              <div className="alert alert-danger alert-dismissible fade show">
                <i className="bi bi-exclamation-triangle me-2"></i>
                {error}
                <button
                  type="button"
                  className="btn-close"
                  onClick={() => setError("")}
                ></button>
              </div>
            </div>
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∏ */}
        <div className="row mb-4">
          <div className="col-12">
            <div className="card">
              <div className="card-header">
                <ul className="nav nav-tabs card-header-tabs">
                  <li className="nav-item">
                    <button
                      className={`nav-link ${
                        activeTab === "daily" ? "active" : ""
                      }`}
                      onClick={() => setActiveTab("daily")}
                    >
                      <i className="bi bi-calendar-day me-1"></i>
                      –î–µ–Ω—å
                    </button>
                  </li>
                  <li className="nav-item">
                    <button
                      className={`nav-link ${
                        activeTab === "weekly" ? "active" : ""
                      }`}
                      onClick={() => setActiveTab("weekly")}
                    >
                      <i className="bi bi-calendar-week me-1"></i>
                      –ù–µ–¥–µ–ª—è
                    </button>
                  </li>
                  <li className="nav-item">
                    <button
                      className={`nav-link ${
                        activeTab === "monthly" ? "active" : ""
                      }`}
                      onClick={() => setActiveTab("monthly")}
                    >
                      <i className="bi bi-calendar-month me-1"></i>
                      –ú–µ—Å—è—Ü
                    </button>
                  </li>
                  <li className="nav-item">
                    <button
                      className={`nav-link ${
                        activeTab === "dishes" ? "active" : ""
                      }`}
                      onClick={() => setActiveTab("dishes")}
                    >
                      <i className="bi bi-egg-fried me-1"></i>
                      –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞
                    </button>
                  </li>
                  <li className="nav-item">
                    <button
                      className={`nav-link ${
                        activeTab === "employees" ? "active" : ""
                      }`}
                      onClick={() => setActiveTab("employees")}
                    >
                      <i className="bi bi-people me-1"></i>
                      –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
                    </button>
                  </li>
                </ul>
              </div>
              <div className="card-body">
                {/* –§–∏–ª—å—Ç—Ä—ã */}
                <div className="row mb-4">
                  <div className="col-12">
                    <div className="card bg-light">
                      <div className="card-body py-3">
                        <div className="row g-3 align-items-center">
                          {activeTab === "daily" && (
                            <div className="col-md-3">
                              <label className="form-label">–î–∞—Ç–∞</label>
                              <input
                                type="date"
                                className="form-control"
                                value={filters.date}
                                onChange={(e) =>
                                  setFilters((prev) => ({
                                    ...prev,
                                    date: e.target.value,
                                  }))
                                }
                              />
                            </div>
                          )}
                          {activeTab === "weekly" && (
                            <div className="col-md-3">
                              <label className="form-label">
                                –ù–∞—á–∞–ª–æ –Ω–µ–¥–µ–ª–∏
                              </label>
                              <input
                                type="date"
                                className="form-control"
                                value={filters.startDate}
                                onChange={(e) =>
                                  setFilters((prev) => ({
                                    ...prev,
                                    startDate: e.target.value,
                                  }))
                                }
                              />
                            </div>
                          )}
                          {activeTab === "monthly" && (
                            <>
                              <div className="col-md-3">
                                <label className="form-label">–ì–æ–¥</label>
                                <select
                                  className="form-select"
                                  value={filters.year}
                                  onChange={(e) =>
                                    setFilters((prev) => ({
                                      ...prev,
                                      year: parseInt(e.target.value),
                                    }))
                                  }
                                >
                                  {[2023, 2024, 2025].map((year) => (
                                    <option key={year} value={year}>
                                      {year}
                                    </option>
                                  ))}
                                </select>
                              </div>
                              <div className="col-md-3">
                                <label className="form-label">–ú–µ—Å—è—Ü</label>
                                <select
                                  className="form-select"
                                  value={filters.month}
                                  onChange={(e) =>
                                    setFilters((prev) => ({
                                      ...prev,
                                      month: parseInt(e.target.value),
                                    }))
                                  }
                                >
                                  {Array.from(
                                    { length: 12 },
                                    (_, i) => i + 1
                                  ).map((month) => (
                                    <option key={month} value={month}>
                                      {new Date(
                                        2023,
                                        month - 1
                                      ).toLocaleDateString("ru-RU", {
                                        month: "long",
                                      })}
                                    </option>
                                  ))}
                                </select>
                              </div>
                            </>
                          )}
                          {activeTab === "dishes" && (
                            <>
                              <div className="col-md-3">
                                <label className="form-label">–ü–µ—Ä–∏–æ–¥</label>
                                <select
                                  className="form-select"
                                  value={filters.period}
                                  onChange={(e) =>
                                    setFilters((prev) => ({
                                      ...prev,
                                      period: e.target.value,
                                    }))
                                  }
                                >
                                  <option value="day">–î–µ–Ω—å</option>
                                  <option value="week">–ù–µ–¥–µ–ª—è</option>
                                  <option value="month">–ú–µ—Å—è—Ü</option>
                                  <option value="year">–ì–æ–¥</option>
                                </select>
                              </div>
                              <div className="col-md-3">
                                <label className="form-label">–õ–∏–º–∏—Ç</label>
                                <select
                                  className="form-select"
                                  value={filters.dishesLimit}
                                  onChange={(e) =>
                                    setFilters((prev) => ({
                                      ...prev,
                                      dishesLimit: parseInt(e.target.value),
                                    }))
                                  }
                                >
                                  <option value="5">–¢–æ–ø 5</option>
                                  <option value="10">–¢–æ–ø 10</option>
                                  <option value="20">–¢–æ–ø 20</option>
                                </select>
                              </div>
                            </>
                          )}
                          <div className="col-md-3">
                            <button
                              className="btn btn-primary mt-4"
                              onClick={loadStats}
                              disabled={loading}
                            >
                              {loading ? (
                                <>
                                  <span className="spinner-border spinner-border-sm me-2" />
                                  –ó–∞–≥—Ä—É–∑–∫–∞...
                                </>
                              ) : (
                                <>
                                  <i className="bi bi-arrow-clockwise me-2"></i>
                                  –û–±–Ω–æ–≤–∏—Ç—å
                                </>
                              )}
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ */}
                {loading ? (
                  <div className="text-center py-5">
                    <div className="spinner-border text-primary" role="status">
                      <span className="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                    </div>
                    <p className="mt-3 text-muted">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
                  </div>
                ) : (
                  <>
                    {activeTab === "daily" && renderDailyStats()}
                    {activeTab === "weekly" && renderWeeklyStats()}
                    {activeTab === "monthly" && renderMonthlyStats()}
                    {activeTab === "dishes" && renderPopularDishes()}
                    {activeTab === "employees" && renderEmployeeStats()}
                  </>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default StatsAdmin;
