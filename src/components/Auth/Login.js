import React, { useState } from "react";
import { useAuth } from "../../context/AuthContext";
import { useNavigate, Link } from "react-router-dom";

const Login = () => {
  const [formData, setFormData] = useState({
    email: "",
    password: "",
  });
  const [error, setError] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  const { login, isAuthenticated } = useAuth();
  const navigate = useNavigate();

  // –†–µ–¥–∏—Ä–µ–∫—Ç –µ—Å–ª–∏ —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  React.useEffect(() => {
    console.log("üîç Login –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", isAuthenticated);
    if (isAuthenticated) {
      console.log("‚úÖ –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /dashboard");
      navigate("/dashboard");
    }
  }, [isAuthenticated, navigate]);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");
    setIsLoading(true);

    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã login");

    const result = await login(formData.email, formData.password);

    if (result.success) {
      console.log("‚úÖ Login —É—Å–ø–µ—à–µ–Ω, –∂–¥–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è...");
      // –ù–µ –¥–µ–ª–∞–µ–º navigate –∑–¥–µ—Å—å - —Å—Ä–∞–±–æ—Ç–∞–µ—Ç useEffect –≤—ã—à–µ
    } else {
      console.log("‚ùå Login –æ—à–∏–±–∫–∞:", result.message);
      setError(result.message);
      setIsLoading(false);
    }
  };

  const testBackend = async () => {
    try {
      const response = await fetch("http://localhost:5000/api/auth/me", {
        headers: {
          Authorization: `Bearer ${localStorage.getItem("token")}`,
        },
      });
      const data = await response.json();
      console.log("–¢–µ—Å—Ç –±—ç–∫–µ–Ω–¥–∞:", data);
      alert(`–ë—ç–∫–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç: ${data.user ? "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" : "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"}`);
    } catch (err) {
      console.error("–ë—ç–∫–µ–Ω–¥ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω:", err);
      alert("–ë—ç–∫–µ–Ω–¥ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!");
    }
  };

  return (
    <div className="container-fluid vh-100 bg-light">
      <div className="row h-100 justify-content-center align-items-center">
        <div className="col-md-4 col-sm-8">
          <div className="text-center mb-3">
            <button
              onClick={testBackend}
              className="btn btn-outline-secondary btn-sm"
            >
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            </button>
          </div>

          <div className="card shadow">
            <div className="card-header bg-primary text-white text-center">
              <h4 className="mb-0">
                <i className="bi bi-shop me-2"></i>
                –†–µ—Å—Ç–æ—Ä–∞–Ω "DINOSER"
              </h4>
              <small>–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</small>
            </div>
            <div className="card-body p-4">
              <h5 className="card-title text-center mb-4">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h5>

              {error && (
                <div className="alert alert-danger">
                  <strong>–û—à–∏–±–∫–∞:</strong> {error}
                </div>
              )}

              <form onSubmit={handleSubmit}>
                <div className="mb-3">
                  <label htmlFor="email" className="form-label">
                    <i className="bi bi-envelope me-2"></i>
                    Email –∞–¥—Ä–µ—Å
                  </label>
                  <input
                    type="email"
                    className="form-control"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={handleChange}
                    placeholder="admin@restaurant.com"
                    required
                  />
                </div>

                <div className="mb-3">
                  <label htmlFor="password" className="form-label">
                    <i className="bi bi-lock me-2"></i>
                    –ü–∞—Ä–æ–ª—å
                  </label>
                  <input
                    type="password"
                    className="form-control"
                    id="password"
                    name="password"
                    value={formData.password}
                    onChange={handleChange}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    required
                  />
                </div>

                <button
                  type="submit"
                  disabled={isLoading}
                  className="btn btn-primary w-100 py-2"
                >
                  {isLoading ? (
                    <>
                      <span
                        className="spinner-border spinner-border-sm me-2"
                        role="status"
                      ></span>
                      –í—Ö–æ–¥...
                    </>
                  ) : (
                    <>
                      <i className="bi bi-box-arrow-in-right me-2"></i>
                      –í–æ–π—Ç–∏
                    </>
                  )}
                </button>
              </form>

              <div className="text-center mt-3">
                <small className="text-muted">
                  –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{" "}
                  <Link to="/register" className="text-decoration-none">
                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                  </Link>
                </small>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Login;
