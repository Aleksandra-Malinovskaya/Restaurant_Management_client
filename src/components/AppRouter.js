import React from "react";
import { Routes, Route, Navigate } from "react-router-dom";
import { useAuth } from "../context/AuthContext";
import {
  SUPER_ADMIN_ROLE,
  ADMIN_ROLE,
  WAITER_ROLE,
  CHEF_ROLE,
  TRAINEE_ROLE,
} from "../utils/consts";

// –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
import Auth from "./pages/Auth";
import Admin from "./pages/admin/Admin";
import Waiter from "./pages/waiter/Waiter";
import Chef from "./pages/chef/Chef";
import Trainee from "./pages/Trainee";

// –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
import Users from "./pages/admin/Users";
import Dishes from "./pages/admin/Dishes";
import Categories from "./pages/admin/Categories";
import TablesManagement from "./pages/admin/TablesManagement";
import Stats from "./pages/admin/Stats";

// –°—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–≤–∞—Ä–∞
import ChefMenu from "./pages/chef/ChefMenu";
import ChefOrders from "./pages/chef/ChefOrders";
import ChefSettings from "./pages/chef/ChefSettings";
import ChefHistory from "./pages/chef/ChefHistory";

import WaiterSettings from "./pages/waiter/WaiterSettings";
import WaiterMenu from "./pages/waiter/WaiterMenu";
import WaiterTable from "./pages/waiter/WaiterTable";
import WaiterReservations from "./pages/waiter/WaiterReservations";
import WaiterTables from "./pages/waiter/WaiterTables";

const AppRouter = () => {
  const { user } = useAuth();

  console.log("üîÑ AppRouter:", { user });

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞ –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getRolePage = () => {
    console.log("üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ä–æ–ª–∏:", user?.role);

    if (!user) {
      console.log("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Auth");
      return <Auth />;
    }

    switch (user.role) {
      case SUPER_ADMIN_ROLE:
      case ADMIN_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Admin");
        return <Admin />;
      case WAITER_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Waiter");
        return <Waiter />;
      case CHEF_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Chef");
        return <Chef />;
      case TRAINEE_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Trainee");
        return <Trainee />;
      default:
        console.log("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Auth");
        return <Auth />;
    }
  };

  return (
    <Routes>
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç */}
      <Route path="/" element={getRolePage()} />

      {/* –°—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
      <Route path="/auth" element={<Auth />} />

      {/* –ì–ª–∞–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ —Ä–æ–ª—è–º */}
      <Route path="/admin" element={<Admin />} />
      <Route path="/waiter" element={<Waiter />} />
      <Route path="/chef" element={<Chef />} />
      <Route path="/trainee" element={<Trainee />} />

      {/* –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è - –î–û–õ–ñ–ù–´ –ë–´–¢–¨ –ü–û–õ–ù–´–ï –ü–£–¢–ò */}
      <Route path="/admin/users" element={<Users />} />
      <Route path="/admin/dishes" element={<Dishes />} />
      <Route path="/admin/categories" element={<Categories />} />
      <Route path="/admin/tables" element={<TablesManagement />} />
      <Route path="/admin/statistics" element={<Stats />} />

      <Route path="/chef" element={<Chef />} />
      <Route path="/chef/orders" element={<ChefOrders />} />
      <Route path="/chef/menu" element={<ChefMenu />} />
      <Route path="/chef/history" element={<ChefHistory />} />
      <Route path="/chef/settings" element={<ChefSettings />} />

      <Route path="/waiter/settings" element={<WaiterSettings />} />
      <Route path="/waiter/menu" element={<WaiterMenu />} />
      <Route path="/waiter/table/:tableId" element={<WaiterTable />} />
      <Route path="/waiter/tables" element={<WaiterTables />} />
      <Route path="/waiter/reservations" element={<WaiterReservations />} />

      {/* –ó–∞–ø–∞—Å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç */}
      <Route path="*" element={<Navigate to="/" replace />} />
    </Routes>
  );
};

export default AppRouter;
