import React from "react";
import { Routes, Route, Navigate } from "react-router-dom";
import { useAuth } from "../context/AuthContext";
import {
  SUPER_ADMIN_ROLE,
  ADMIN_ROLE,
  WAITER_ROLE,
  CHEF_ROLE,
  TRAINEE_ROLE,
} from "../utils/consts";

// –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
import Auth from "./pages/Auth";
import Admin from "./pages/admin/Admin";
import Waiter from "./pages/waiter/Waiter";
import Chef from "./pages/chef/Chef";
import AdminPanel from "./pages/admins/AdminPanel";

// –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
import Users from "./pages/admin/Users";
import Dishes from "./pages/admin/Dishes";
import Categories from "./pages/admin/Categories";
import TablesManagement from "./pages/admin/TablesManagement";
import Stats from "./pages/admin/Stats";

// –°—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–≤–∞—Ä–∞
import ChefMenu from "./pages/chef/ChefMenu";
import ChefOrders from "./pages/chef/ChefOrders";
import ChefSettings from "./pages/chef/ChefSettings";
import ChefHistory from "./pages/chef/ChefHistory";

import WaiterSettings from "./pages/waiter/WaiterSettings";
import WaiterMenu from "./pages/waiter/WaiterMenu";
import WaiterTable from "./pages/waiter/WaiterTable";
import WaiterReservations from "./pages/waiter/WaiterReservations";
import WaiterTables from "./pages/waiter/WaiterTables";

import AdminSettings from "./pages/admins/AdminSettings";
import TablesManagementAdmin from "./pages/admins/TablesManagementAdmin";
import DishesAdmin from "./pages/admins/DishesAdmin";
import CategoriesAdmin from "./pages/admins/CategoriesAdmin";
import StatsAdmin from "./pages/admins/StatsAdmin";

import Tranee from "./pages/trainee/Tranee";
import TraneeMenu from "./pages/trainee/TraneeMenu";
import TraneeSettings from "./pages/trainee/TraneeSettings";

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞—â–∏—Ç—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤
const ProtectedRoute = ({ role, requiredRole, children }) => {
  if (!role) {
    return <Navigate to="/auth" replace />;
  }

  if (requiredRole && role !== requiredRole) {
    return <Navigate to="/unauthorized" replace />;
  }

  return children;
};

const AppRouter = () => {
  const { user } = useAuth();

  console.log("üîÑ AppRouter:", { user });

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞ –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getRolePage = () => {
    console.log("üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ä–æ–ª–∏:", user?.role);

    if (!user) {
      console.log("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Auth");
      return <Auth />;
    }

    switch (user.role) {
      case SUPER_ADMIN_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞ –Ω–∞ /admin");
        return <Navigate to="/admin" replace />;
      case ADMIN_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –Ω–∞ /admin-panel");
        return <Navigate to="/admin-panel" replace />;
      case WAITER_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Waiter");
        return <Navigate to="/waiter" replace />;
      case CHEF_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Chef");
        return <Navigate to="/chef" replace />;
      case TRAINEE_ROLE:
        console.log("‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Trainee");
        return <Navigate to="/trainee" replace />;
      default:
        console.log("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Auth");
        return <Auth />;
    }
  };

  return (
    <Routes>
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç */}
      <Route path="/" element={getRolePage()} />

      {/* –°—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
      <Route path="/auth" element={<Auth />} />

      {/* –ì–ª–∞–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ —Ä–æ–ª—è–º —Å –∑–∞—â–∏—Ç–æ–π */}
      <Route
        path="/admin"
        element={
          <ProtectedRoute role={user?.role} requiredRole={SUPER_ADMIN_ROLE}>
            <Admin />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin-panel"
        element={
          <ProtectedRoute role={user?.role} requiredRole={ADMIN_ROLE}>
            <AdminPanel />
          </ProtectedRoute>
        }
      />
      <Route
        path="/waiter"
        element={
          <ProtectedRoute role={user?.role} requiredRole={WAITER_ROLE}>
            <Waiter />
          </ProtectedRoute>
        }
      />
      <Route
        path="/chef"
        element={
          <ProtectedRoute role={user?.role} requiredRole={CHEF_ROLE}>
            <Chef />
          </ProtectedRoute>
        }
      />
      <Route
        path="/trainee"
        element={
          <ProtectedRoute role={user?.role} requiredRole={TRAINEE_ROLE}>
            <Tranee />
          </ProtectedRoute>
        }
      />

      {/* –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞) */}
      <Route
        path="/admin/users"
        element={
          <ProtectedRoute role={user?.role} requiredRole={SUPER_ADMIN_ROLE}>
            <Users />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin/dishes"
        element={
          <ProtectedRoute role={user?.role} requiredRole={SUPER_ADMIN_ROLE}>
            <Dishes />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin/categories"
        element={
          <ProtectedRoute role={user?.role} requiredRole={SUPER_ADMIN_ROLE}>
            <Categories />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin/tables"
        element={
          <ProtectedRoute role={user?.role} requiredRole={SUPER_ADMIN_ROLE}>
            <TablesManagement />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin/statistics"
        element={
          <ProtectedRoute role={user?.role} requiredRole={SUPER_ADMIN_ROLE}>
            <Stats />
          </ProtectedRoute>
        }
      />

      {/* –ú–∞—Ä—à—Ä—É—Ç—ã –ø–æ–≤–∞—Ä–∞ */}
      <Route
        path="/chef/orders"
        element={
          <ProtectedRoute role={user?.role} requiredRole={CHEF_ROLE}>
            <ChefOrders />
          </ProtectedRoute>
        }
      />
      <Route
        path="/chef/menu"
        element={
          <ProtectedRoute role={user?.role} requiredRole={CHEF_ROLE}>
            <ChefMenu />
          </ProtectedRoute>
        }
      />
      <Route
        path="/chef/history"
        element={
          <ProtectedRoute role={user?.role} requiredRole={CHEF_ROLE}>
            <ChefHistory />
          </ProtectedRoute>
        }
      />
      <Route
        path="/chef/settings"
        element={
          <ProtectedRoute role={user?.role} requiredRole={CHEF_ROLE}>
            <ChefSettings />
          </ProtectedRoute>
        }
      />

      {/* –ú–∞—Ä—à—Ä—É—Ç—ã –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞ */}
      <Route
        path="/waiter/settings"
        element={
          <ProtectedRoute role={user?.role} requiredRole={WAITER_ROLE}>
            <WaiterSettings />
          </ProtectedRoute>
        }
      />
      <Route
        path="/waiter/menu"
        element={
          <ProtectedRoute role={user?.role} requiredRole={WAITER_ROLE}>
            <WaiterMenu />
          </ProtectedRoute>
        }
      />
      <Route
        path="/waiter/table/:tableId"
        element={
          <ProtectedRoute role={user?.role} requiredRole={WAITER_ROLE}>
            <WaiterTable />
          </ProtectedRoute>
        }
      />
      <Route
        path="/waiter/tables"
        element={
          <ProtectedRoute role={user?.role} requiredRole={WAITER_ROLE}>
            <WaiterTables />
          </ProtectedRoute>
        }
      />
      <Route
        path="/waiter/reservations"
        element={
          <ProtectedRoute role={user?.role} requiredRole={WAITER_ROLE}>
            <WaiterReservations />
          </ProtectedRoute>
        }
      />

      {/* –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ –ú–ê–†–®–†–£–¢–´ (–¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤) */}
      <Route
        path="/admin-panel/tables"
        element={
          <ProtectedRoute role={user?.role} requiredRole={ADMIN_ROLE}>
            <TablesManagementAdmin />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin-panel/settings"
        element={
          <ProtectedRoute role={user?.role} requiredRole={ADMIN_ROLE}>
            <AdminSettings />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin-panel/dishes"
        element={
          <ProtectedRoute role={user?.role} requiredRole={ADMIN_ROLE}>
            <DishesAdmin />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin-panel/categories"
        element={
          <ProtectedRoute role={user?.role} requiredRole={ADMIN_ROLE}>
            <CategoriesAdmin />
          </ProtectedRoute>
        }
      />
      <Route
        path="/admin-panel/stats"
        element={
          <ProtectedRoute role={user?.role} requiredRole={ADMIN_ROLE}>
            <StatsAdmin />
          </ProtectedRoute>
        }
      />
      <Route path="/tranee" element={<Tranee />} />
      <Route path="/tranee/menu" element={<TraneeMenu />} />
      <Route path="/tranee/settings" element={<TraneeSettings />} />

      {/* –°—Ç—Ä–∞–Ω–∏—Ü–∞ "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" */}
      <Route
        path="/unauthorized"
        element={
          <div className="container-fluid vh-100 bg-light d-flex justify-content-center align-items-center">
            <div className="card shadow">
              <div className="card-body text-center p-5">
                <i className="bi bi-shield-exclamation display-1 text-warning"></i>
                <h3 className="mt-3">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h3>
                <p className="text-muted">
                  –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                </p>
                <button
                  className="btn btn-primary"
                  onClick={() => window.history.back()}
                >
                  –ù–∞–∑–∞–¥
                </button>
              </div>
            </div>
          </div>
        }
      />

      {/* –ó–∞–ø–∞—Å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç */}
      <Route path="*" element={<Navigate to="/" replace />} />
    </Routes>
  );
};

export default AppRouter;
